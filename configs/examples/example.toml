#	Behavior:
#		1. Mimics https://github.com/NNBnh/superb-bootstrap folder structure for moving/linking files. This is the first step
#		2. Then runs tasks

#	Commands:
#		1. sync -- checks for files in $HOME that are not linked, asks to move and symlink
#			also checks for files in $SOURCE_HOME that are not linked, and symlinks them
#		2. run [taskName] -- runs the specified task
#		3. install [pkg] -- just install the specified package using the best available package manager

## envy specific variables are available in the download, link, pre_cmd, and post_cmds. Those variables are as follows:
#	ORIGINAL_TASK  = Root task
#	CURRENT_TASK   = Name of the currently executing task
#	SUDO	       = If sudo should be enabled for that context
#	CONFIG_PATH    = Full path location of the configuration file ? do we need paths for the various config files? packages.toml, ignores, etc?
#	TARGET_PATH    = Target for symlinks
#	SOURCE_PATH    = Source for symlinks

[general]
    # allowed installers in order of preference
    installer_preferences = ["gvm", "yay"]
    # specify what shell should be used to run commands
    shell = "/bin/bash -c"
    config_dir = "/path/to/source/cache/of/dotfiles"
    home_dir = "/target/path/to/symlink/config_dir/into"

## Task configuration

# operations are evaluated in the below listed order
# if any checks fail, the destructive commands are not run
[task.gvm]                                              # the name of the task
    installers = ["bash", "zsh"]                        # which installers we will try to use for this task
    run_if = ["which xcode"]                            # optional command to check before running this task
    skip_if = ["which brew"]                            # optional command to check before skipping this command
    download = [["from","to"]]							# download files from the internet
    link = ["from/this/location to/this/location",      # symlink from your dotfile repo to any given location
        "or/source/is/also/target"]               		# the origin/target basepath is defined when running envy
    deps = ["git", "curl", "#essential"]                # name either packages, or #tasks
                                                        # task names are prefixed with a hash, all others will first try to resolve
                                                        # as packages with defined names in this config, otherwise it'll be used as a raw package name
    pre_cmd = ["${CONFIG_PATH}/scripts/pre_install.sh"] # commands to run, with envy specific variable substitution
    install = ["git"]                                   # list of items to install. These will always be looked up against packages in the TOMLConfig to resolve the installer-specific name
    post_cmd = ["echo $USER", "echo HELLO WORLD!"]	    # post commands to run, with bash variable substitution

[task.essential]
    deps = ["#essential"] # the hash indicates it should try to run the specified task
    install = ["gcc", "git", "curl", "make"]

[task.essential]
    installers = ["apt"] # what installer(s) are required to run this task
    install = ["mercurial", "binutils", "bison", "build-essential"]

[pkg.vim] #the title entry will be the assumed name unless overrides exist for the current platform
    apt = "vim-apt" #all other k/v pairs assume the key is a package manager alias
    apk = "neovim"  #and the value is the name of that package for that specific manager

[pkg.fd]
    apt = "fd-find"